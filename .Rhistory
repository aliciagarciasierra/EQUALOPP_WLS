values = c("#F53963","#25C290")) +
labs(y = bquote(R^2), x = element_blank()) +
theme(text            = element_text(size=17),
legend.position = "bottom") +
ylim(c(0,0.45))
data <- data_inequality_plot(method) %>% filter(outcome==out)
data <- mutate(data,
ability_def = factor(ability_def,levels = c("PGS", "observed"), labels = ability.labs),
outcome     = factor(outcome, levels = OUTCOMES),
factor      = factor(factor, levels = c("radical","liberal")),
invisible   = ifelse(factor=="radical" & partial == "unconditional", 1, 0))
data <- filter(data, ability_def=="polygenic indices")
p <- ggplot(data, aes(partial, value, fill = factor, alpha = invisible)) +
geom_bar(stat="identity", position = "dodge") +
geom_errorbar(aes(ymin=value-ci, ymax=value+ci),
width=.1, position = position_dodge(width = 0.9)) +
#facet_grid(outcome~ability_def) +
theme(legend.spacing.y = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE)) +
scale_alpha_continuous(range = c(1, 0), guide = 'none')
p + scale_fill_manual(limits = c("radical","liberal"),
labels = c("luck egalitarian","fair"),
name   = "",
values = c("#F53963","#25C290")) +
labs(y = bquote(R^2), x = element_blank()) +
theme(text            = element_text(size=17),
legend.position = "bottom") +
ylim(c(0,0.45))
p <- ggplot(data, aes(partial, value, fill = factor, alpha = invisible)) +
geom_bar(stat="identity", position = "dodge") +
geom_errorbar(aes(ymin=value-ci, ymax=value+ci),
width=.1, position = position_dodge(width = 0.9)) +
facet_grid(outcome~ability_def) +
theme(legend.spacing.y = unit(1.0, 'cm')) +
guides(fill = guide_legend(byrow = TRUE)) +
scale_alpha_continuous(range = c(1, 0), guide = 'none')
p + scale_fill_manual(limits = c("radical","liberal"),
labels = c("luck egalitarian","fair"),
name   = "",
values = c("#F53963","#25C290")) +
labs(y = bquote(R^2), x = element_blank()) +
theme(text            = element_text(size=17),
legend.position = "bottom") +
ylim(c(0,0.45))
ggsave(paste0("plots/inequality_",method,"_",out,".png"), width = 7, height = 5)
x <- c(1,2,3,4)
x2 <- sapply(x, function(x_element) x_element^2)
x2
pgis <- c("edu", "math", "soc")
lapply(pgis, function(pgi) {
list("author"=3, "paper"=4)
})
result <- lapply(pgis, function(pgi) {
list("author"=3, "paper"=4)
})
result
do.call(rbind, results)
do.call(rbind, result)
do.call(rbind.data.frame, result)
result <- lapply(pgis, function(pgi) {
list("pgis" = pgis, "author"=3, "paper"=4)
})
do.call(rbind.data.frame, result)
result <- lapply(pgis, function(pgi) {
list("pgis" = pgi, "author"=3, "paper"=4)
})
do.call(rbind.data.frame, result)
result <- sapply(pgis, function(pgi) {
list("pgis" = pgi, "author"=3, "paper"=4)
})
result
do.call(rbind.data.frame, result)
data <- data.frame(
education = c(12, 16, 18, 22, 14, 16, 12, 18, 22, 14),  # Years of education
income = c(35000, 60000, 85000, 120000, 45000, 65000, 37000, 90000, 130000, 48000),
sex = c("Male", "Female", "Female", "Male", "Female", "Male", "Male", "Female", "Male", "Female"),
age = c(22, 30, 40, 50, 25, 35, 24, 45, 55, 28),
GPA = c(3.2, 3.8, 3.5, 4.0, 2.9, 3.6, 3.1, 3.9, 4.0, 3.0),
extraversion = c(5, 7, 6, 4, 8, 6, 5, 7, 4, 6)
)
data
View(data)
data <- data.frame(
education = c(12, 16, 18, 22, 14, 16, 12, 18, 22, 14),  # Years of education
income = c(35000, 60000, 85000, 120000, 45000, 65000, 37000, 90000, 130000, 48000),
sex = c(1, 0, 0, 1, 0, 1, 1, 0, 1, 0),
age = c(22, 30, 40, 50, 25, 35, 24, 45, 55, 28),
GPA = c(3.2, 3.8, 3.5, 4.0, 2.9, 3.6, 3.1, 3.9, 4.0, 3.0),
extraversion = c(5, 7, 6, 4, 8, 6, 5, 7, 4, 6)
)
r_squared <- 3
cat("R-squared:", r_squared, "\n")
adj_r_squared <- 2
cat("Education. R-squared:", r_squared, ". Adj R-squared:", adj_r_squared,"\n")
cat("Education. R-squared:", r_squared, "- Adj R-squared:", adj_r_squared,"\n")
cat("Education. R-squared:", r_squared, "- Adj. R-squared:", adj_r_squared,"\n")
compute_indices <- function(data) {
# run model
model <- lm(income ~ sex + age + GPA + extraversion, data = data)
# compute summary
summary_model <- summary(model)
# extract indices
r_squared     <- summary_model$r.squared
adj_r_squared <- summary_model$adj.r.squared
# print/save results
return(list("R-squared"=r_squared, "Adj. R-squared"=adj_r_squared))
}
compute_indices(data)
results <- compute_indices(data)
compute_indices <- function(dataoutcome) {
formula <- paste(outcome,"~ sex + age + GPA + extraversion")
# run model
model <- lm(as.formula(formula), data = data)
# compute summary
summary_model <- summary(model)
# extract indices
r_squared     <- summary_model$r.squared
adj_r_squared <- summary_model$adj.r.squared
# print/save results
return(list("R-squared"=r_squared, "Adj. R-squared"=adj_r_squared))
}
compute_indices <- function(data,outcome) {
formula <- paste(outcome,"~ sex + age + GPA + extraversion")
# run model
model <- lm(as.formula(formula), data = data)
# compute summary
summary_model <- summary(model)
# extract indices
r_squared     <- summary_model$r.squared
adj_r_squared <- summary_model$adj.r.squared
# print/save results
return(list("R-squared"=r_squared, "Adj. R-squared"=adj_r_squared))
}
compute_indices(data, "income")
compute_indices <- function(data, outcome) {
# interactive formula
formula <- paste(outcome,"~ sex + age + GPA + extraversion")
# run model
model <- lm(as.formula(formula), data = data)
# compute summary
summary_model <- summary(model)
# extract indices
r_squared     <- summary_model$r.squared
adj_r_squared <- summary_model$adj.r.squared
# print/save results
return(list("R-squared"=r_squared, "Adj. R-squared"=adj_r_squared))
}
compute_indices(data, "income")
compute_indices(data, "education")
compute_indices <- function(data) {
# run model
model <- lm(education ~ sex + age + GPA + extraversion, data = data)
# compute summary
summary_model <- summary(model)
# extract indices
r_squared     <- summary_model$r.squared
adj_r_squared <- summary_model$adj.r.squared
# print/save results
return(list("R-squared"=r_squared, "Adj. R-squared"=adj_r_squared))
}
results <- compute_indices(data)
results
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/University/UNIL/projects/Inequality-Across-Families-and-PGIs/WLS/EQUALOPP_WLS")
source("00_MASTER_WLS.R")
siblings <- readRDS("data/siblings.rds")
paste(paste0("pc", 1:10, "cog"), collapse = " + ")
PC_COG <- paste0("pc", 1:10, "cog"),
PC_COG <- paste0("pc", 1:10, "cog")
PC_NON_COG <- paste0("pc", 1:10, "noncog")
OUTCOMES
outcome_var <- "education"
# 1) NULL MODEL
m0 <- lmer(as.formula(paste(outcome_var, "~ 1 + (1 | familyID)")), data = siblings)
vcov_m0 <- as.data.frame(VarCorr(m0))
emptyind <- vcov_m0[2, 4]
emptyfam <- vcov_m0[1, 4]
totalvar <- (vcov_m0[1, 4] + vcov_m0[2, 4])
# 2) CONDITIONAL MODEL
m1 <- lmer(as.formula(paste(outcome_var, "~ (",
paste(OBSERVED_COG, collapse=" + ")," + ", paste(OBSERVED_NON_COG, collapse=" + ") ,")^2 + (1 | familyID)")), data = siblings)
vcov_m1 <- as.data.frame(VarCorr(m1))
condind <- vcov_m1[2, 4]
condfam <- vcov_m1[1, 4]
# 3) COMPLETE MODEL
m2 <- lmer(as.formula(paste(outcome_var, "~
(birth_year + birth_order + sex + mother_age_birth + father_age_birth  +",
paste(OBSERVED_COG, collapse = " + "), " + ", paste(OBSERVED_NON_COG, collapse = " + "),
paste(PC_COG,       collapse = " + "), " + ", paste(PC_NON_COG,       collapse = " + "),
")^2 + (1 |familyID)")), data = siblings)
# 3) COMPLETE MODEL
m2 <- lmer(as.formula(paste(outcome_var, "~
(birth_year + birth_order + sex + mother_age_birth + father_age_birth  +",
paste(OBSERVED_COG, collapse = " + "), " + ", paste(OBSERVED_NON_COG, collapse = " + "), " + ",
paste(PC_COG,       collapse = " + "), " + ", paste(PC_NON_COG,       collapse = " + "),
")^2 + (1 |familyID)")), data = siblings)
datas <- lapply(ABILITY_DEFS, function(ability) {
name <- switch(ability, "polygenic indices"="", "observed ability"=paste0("_",OBSERVED_COG))
data <- read_excel(paste0("results/full_results",name,".xlsx"), sheet = "For plotting")
data %>% mutate(Ability = ability)
})
data_graph <- do.call(rbind, datas)
# Custom order
data_graph$Index   <- factor(data_graph$Index, levels = INDICES)
data_graph$Outcome <- factor(data_graph$Outcome, levels = OUTCOMES)
data_graph$Ability <- factor(data_graph$Ability, levels = ABILITY_DEFS)
# Define grouping for splitting outcomes and create two plots
groups <- cut(1:length(OUTCOMES), 2, labels = FALSE)
# Create the bar graph
lapply(1:2, function(group) {
# filter data based on outcome
data <- filter(data_graph, Outcome %in% OUTCOMES[groups == group])
# Main elements
ggplot(data, aes(x = Index, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-0.8 ,hjust=0.3) +
# Theme
theme_bw() +
theme(axis.text.x = element_blank() ) +
# Add labels
#scale_x_discrete(labels = INDICES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
guides(fill = guide_legend(title = NULL)) +
# Other
facet_grid(Outcome ~ Ability, labeller = labeller(Outcome = OUTCOMES.labs)) +
ylim(-0.15,0.6)
ggsave(paste0("plots/comparison_",group,".png"), width = 6, height = 8, dpi = 300)
})
# Create the bar graph
lapply(1:2, function(group) {
# filter data based on outcome
data <- filter(data_graph, Outcome %in% OUTCOMES[groups == group])
# Main elements
ggplot(data, aes(x = Index, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-0.8 ,hjust=0.3) +
# Theme
theme_bw() +
theme(axis.text.x = element_blank() ) +
# Add labels
#scale_x_discrete(labels = INDICES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
guides(fill = guide_legend(title = NULL)) +
# Other
facet_grid(Outcome ~ Ability, labeller = labeller(Outcome = OUTCOMES.labs)) +
ylim(-0.1,0.6)
ggsave(paste0("plots/comparison_",group,".png"), width = 6, height = 8, dpi = 300)
})
# Create the bar graph
lapply(1:2, function(group) {
# filter data based on outcome
data <- filter(data_graph, Outcome %in% OUTCOMES[groups == group])
# Main elements
ggplot(data, aes(x = Index, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-0.8 ,hjust=0.3) +
# Theme
theme_bw() +
theme(axis.text.x = element_blank() ) +
# Add labels
#scale_x_discrete(labels = INDICES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
guides(fill = guide_legend(title = NULL)) +
# Other
facet_grid(Outcome ~ Ability, labeller = labeller(Outcome = OUTCOMES.labs)) +
ylim(-0.05,0.6)
ggsave(paste0("plots/comparison_",group,".png"), width = 6, height = 8, dpi = 300)
})
# Create the bar graph
lapply(1:2, function(group) {
# filter data based on outcome
data <- filter(data_graph, Outcome %in% OUTCOMES[groups == group])
# Main elements
ggplot(data, aes(x = Index, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-0.8 ,hjust=0.3) +
# Theme
theme_bw() +
theme(axis.text.x = element_blank() ) +
# Add labels
#scale_x_discrete(labels = INDICES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
guides(fill = guide_legend(title = NULL)) +
# Other
facet_grid(Outcome ~ Ability, labeller = labeller(Outcome = OUTCOMES.labs)) +
ylim(-0.06,0.6)
ggsave(paste0("plots/comparison_",group,".png"), width = 6, height = 8, dpi = 300)
})
# Create the bar graph
lapply(1:2, function(group) {
# filter data based on outcome
data <- filter(data_graph, Outcome %in% OUTCOMES[groups == group])
# Main elements
ggplot(data, aes(x = Index, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-0.8 ,hjust=0.3) +
# Theme
theme_bw() +
theme(axis.text.x = element_blank() ) +
# Add labels
#scale_x_discrete(labels = INDICES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
guides(fill = guide_legend(title = NULL)) +
# Other
facet_grid(Outcome ~ Ability, labeller = labeller(Outcome = OUTCOMES.labs)) +
ylim(-0.07,0.6)
ggsave(paste0("plots/comparison_",group,".png"), width = 6, height = 8, dpi = 300)
})
# Create the bar graph
lapply(1:2, function(group) {
# filter data based on outcome
data <- filter(data_graph, Outcome %in% OUTCOMES[groups == group])
# Main elements
ggplot(data, aes(x = Index, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-0.8 ,hjust=0.3) +
# Theme
theme_bw() +
theme(axis.text.x = element_blank() ) +
# Add labels
#scale_x_discrete(labels = INDICES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
guides(fill = guide_legend(title = NULL)) +
# Other
facet_grid(Outcome ~ Ability, labeller = labeller(Outcome = OUTCOMES.labs)) +
ylim(-0.09,0.6)
ggsave(paste0("plots/comparison_",group,".png"), width = 6, height = 8, dpi = 300)
})
# Read the data
data_graph <- read_excel("results/full_results.xlsx", sheet = "For plotting")
# Set theme
set_pilot_family("Avenir Next Medium", title_family = "Avenir Next Demi Bold")
# Custom order
data_graph$Index   <- factor(data_graph$Index, levels = INDICES)
data_graph$Outcome <- factor(data_graph$Outcome, levels = OUTCOMES)
# Create the bar graph
# Main elements
ggplot(data_graph, aes(x = Outcome, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-1.5 ,hjust=-0.1) +
# Add labels
scale_x_discrete(labels = OUTCOMES.labs) +
scale_fill_discrete(labels = c("Sibcorr" = "Sibling correlation",
"IOLIB" = "Liberal IOP",
"IORAD" = "Radical IOP")) +
# Theme
guides(fill = guide_legend(title = NULL)) +
theme_bw()
# Save the plot
ggsave("plots/results_plot_PGI.pdf", width = 13, height = 6, dpi = 300)
# Read the data
data_graph <- read_excel(paste0("results/full_results_",OBSERVED_COG,".xlsx"), sheet = "For plotting")
# Set theme
set_pilot_family("Avenir Next Medium", title_family = "Avenir Next Demi Bold")
# Custom order
data_graph$Index   <- factor(data_graph$Index, levels = INDICES)
data_graph$Outcome <- factor(data_graph$Outcome, levels = OUTCOMES)
# Create the bar graph
# Main elements
ggplot(data_graph, aes(x = Outcome, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-1.5 ,hjust=-0.1) +
# Add labels
scale_x_discrete(labels = OUTCOMES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
# Theme
guides(fill = guide_legend(title = NULL)) +
theme_bw()
#theme_pilot(axis_title_size = 14,
#            axis_text_size = 13,
#            legend_text_size = 13,
#            legend_title_size = 13,
#            legend_position = "right")
#
# Save the plot
ggsave(paste0("plots/results_plot_",OBSERVED_COG,".pdf"), width = 13, height = 6, dpi = 300)
datas <- lapply(ABILITY_DEFS, function(ability) {
name <- switch(ability, "polygenic indices"="", "observed ability"=paste0("_",OBSERVED_COG))
data <- read_excel(paste0("results/full_results",name,".xlsx"), sheet = "For plotting")
data %>% mutate(Ability = ability)
})
data_graph <- do.call(rbind, datas)
# Custom order
data_graph$Index   <- factor(data_graph$Index, levels = INDICES)
data_graph$Outcome <- factor(data_graph$Outcome, levels = OUTCOMES)
data_graph$Ability <- factor(data_graph$Ability, levels = ABILITY_DEFS)
ggplot(data_graph, aes(x = Outcome, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-1.5 ,hjust=-0.1) +
# Add labels
scale_x_discrete(labels = OUTCOMES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
# Theme
guides(fill = guide_legend(title = NULL)) +
facet_wrap(~ Ability) +
theme_bw()
ggplot(data_graph, aes(x = Outcome, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-1.5 ,hjust=-0.1) +
# Add labels
scale_x_discrete(labels = OUTCOMES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
# Theme
guides(fill = guide_legend(title = NULL)) +
facet_wrap(~ Ability, nrow = 2) +
theme_bw()
ggsave(paste0("plots/comparison_rows.pdf"), width = 10, height = 8, dpi = 300)
ggplot(data_graph, aes(x = Outcome, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-1.5 ,hjust=-0.1) +
# Add labels
scale_x_discrete(labels = OUTCOMES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
# Theme
guides(fill = guide_legend(title = NULL)) +
facet_wrap(~ Ability, nrow = 2) +
ylim(-0.09,0.5) +
theme_bw()
ggsave(paste0("plots/comparison_rows.pdf"), width = 10, height = 8, dpi = 300)
ggplot(data_graph, aes(x = Outcome, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-1.5 ,hjust=-0) +
# Add labels
scale_x_discrete(labels = OUTCOMES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
# Theme
guides(fill = guide_legend(title = NULL)) +
facet_wrap(~ Ability, nrow = 2) +
ylim(-0.09,0.5) +
theme_bw()
ggsave(paste0("plots/comparison_rows.pdf"), width = 10, height = 8, dpi = 300)
ggplot(data_graph, aes(x = Outcome, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-1.5 ,hjust=0.1) +
# Add labels
scale_x_discrete(labels = OUTCOMES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
# Theme
guides(fill = guide_legend(title = NULL)) +
facet_wrap(~ Ability, nrow = 2) +
ylim(-0.09,0.5) +
theme_bw()
ggsave(paste0("plots/comparison_rows.pdf"), width = 10, height = 8, dpi = 300)
ggplot(data_graph, aes(x = Outcome, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-1.5 ,hjust=0.3) +
# Add labels
scale_x_discrete(labels = OUTCOMES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
# Theme
guides(fill = guide_legend(title = NULL)) +
facet_wrap(~ Ability, nrow = 2) +
ylim(-0.09,0.5) +
theme_bw()
ggsave(paste0("plots/comparison_rows.pdf"), width = 10, height = 8, dpi = 300)
ggsave(paste0("plots/comparison_rows.pdf"), width = 11, height = 8, dpi = 300)
ggplot(data_graph, aes(x = Outcome, y = Estimate, fill = Index)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Lower, ymax = Upper),
position = position_dodge(0.9), width = 0.25, alpha = 0.4) +
labs(title = " ", x = " ", y = " ") +
geom_text(aes(label = round(Estimate, 2)), position = position_dodge(width = 1), vjust =-1.5 ,hjust=0.3) +
# Add labels
scale_x_discrete(labels = OUTCOMES.labs) +
scale_fill_discrete(labels = INDICES.labs) +
# Theme
guides(fill = guide_legend(title = NULL)) +
facet_wrap(~ Ability, nrow = 2) +
ylim(-0.08,0.5) +
theme_bw()
ggsave(paste0("plots/comparison_rows.pdf"), width = 11, height = 8, dpi = 300)
